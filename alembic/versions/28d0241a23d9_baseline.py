"""baseline

Revision ID: 28d0241a23d9
Revises: 
Create Date: 2025-05-18 21:16:33.648907

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '28d0241a23d9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Drop association tables first (they have foreign keys to other tables)
    op.drop_table('books_book_authors')
    op.drop_table('books_book_bookshelves')
    op.drop_table('books_book_languages')
    op.drop_table('books_book_subjects')
    
    # Drop tables that depend on books_book
    op.drop_table('books_format')
    
    # Drop the main tables
    op.drop_table('books_book')
    op.drop_table('books_author')
    op.drop_table('books_bookshelf')
    op.drop_table('books_language')
    op.drop_table('books_subject')


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books_book_authors',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['books_author.id'], name='books_book_authors_author_id_984f1ab8_fk_books_author_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['book_id'], ['books_book.id'], name='books_book_authors_book_id_ed3433e7_fk_books_book_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='books_book_authors_pkey'),
    sa.UniqueConstraint('book_id', 'author_id', name='books_book_authors_book_id_8714badb_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('books_book_authors_4f331e2f', 'books_book_authors', ['author_id'], unique=False)
    op.create_index('books_book_authors_0a4572cc', 'books_book_authors', ['book_id'], unique=False)
    op.create_table('books_bookshelf',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('books_bookshelf_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='books_bookshelf_pkey'),
    sa.UniqueConstraint('name', name='books_bookshelf_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_bookshelf_name_trgm', 'books_bookshelf', ['name'], unique=False, postgresql_using='gin')
    op.create_index('books_bookshelf_name_2642cad6_like', 'books_bookshelf', ['name'], unique=False)
    op.create_table('books_book_languages',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books_book.id'], name='books_book_languages_book_id_e833b1f4_fk_books_book_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['language_id'], ['books_language.id'], name='books_book_languages_language_id_e9f60572_fk_books_language_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='books_book_languages_pkey'),
    sa.UniqueConstraint('book_id', 'language_id', name='books_book_languages_book_id_554fdccb_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('books_book_languages_468679bd', 'books_book_languages', ['language_id'], unique=False)
    op.create_index('books_book_languages_0a4572cc', 'books_book_languages', ['book_id'], unique=False)
    op.create_table('books_book_subjects',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('subject_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books_book.id'], name='books_book_subjects_book_id_a578cff2_fk_books_book_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['books_subject.id'], name='books_book_subjects_subject_id_7445958f_fk_books_subject_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='books_book_subjects_pkey'),
    sa.UniqueConstraint('book_id', 'subject_id', name='books_book_subjects_book_id_74dcf64a_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('books_book_subjects_ffaba1d1', 'books_book_subjects', ['subject_id'], unique=False)
    op.create_index('books_book_subjects_0a4572cc', 'books_book_subjects', ['book_id'], unique=False)
    op.create_table('books_format',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('mime_type', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books_book.id'], name='books_format_book_id_b948fa34_fk_books_book_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='books_format_pkey')
    )
    op.create_index('idx_format_mime_type_lower', 'books_format', [sa.literal_column('lower(mime_type::text)')], unique=False)
    op.create_index('books_format_0a4572cc', 'books_format', ['book_id'], unique=False)
    op.create_table('books_subject',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='books_subject_pkey')
    )
    op.create_index('idx_subjects_name_trgm', 'books_subject', [sa.literal_column('lower(name::text)')], unique=False, postgresql_using='gin')
    op.create_index('idx_subject_name_trgm', 'books_subject', ['name'], unique=False, postgresql_using='gin')
    op.create_table('books_book_bookshelves',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('book_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bookshelf_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books_book.id'], name='books_book_bookshelves_book_id_f820ff72_fk_books_book_id', initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['bookshelf_id'], ['books_bookshelf.id'], name='books_book_bookshel_bookshelf_id_80cc77c5_fk_books_bookshelf_id', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='books_book_bookshelves_pkey'),
    sa.UniqueConstraint('book_id', 'bookshelf_id', name='books_book_bookshelves_book_id_6016a70a_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('books_book_bookshelves_40928700', 'books_book_bookshelves', ['bookshelf_id'], unique=False)
    op.create_index('books_book_bookshelves_0a4572cc', 'books_book_bookshelves', ['book_id'], unique=False)
    op.create_table('books_author',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('birth_year', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('death_year', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='books_author_pkey')
    )
    op.create_index('idx_author_name_trgm', 'books_author', ['name'], unique=False, postgresql_using='gin')
    op.create_table('books_book',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('download_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gutenberg_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('media_type', sa.VARCHAR(length=16), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
    sa.CheckConstraint('download_count >= 0', name='books_book_download_count_check'),
    sa.CheckConstraint('gutenberg_id >= 0', name='books_book_gutenberg_id_check'),
    sa.PrimaryKeyConstraint('id', name='books_book_pkey'),
    sa.UniqueConstraint('gutenberg_id', name='books_book_gutenberg_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('idx_book_title_trgm', 'books_book', ['title'], unique=False, postgresql_using='gin')
    op.create_index('idx_book_gutenberg_id', 'books_book', ['gutenberg_id'], unique=False)
    op.create_index('idx_book_download_count', 'books_book', [sa.literal_column('download_count DESC')], unique=False)
    op.create_table('books_language',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('code', sa.VARCHAR(length=4), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='books_language_pkey'),
    sa.UniqueConstraint('code', name='books_language_code_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('books_language_code_217c406c_like', 'books_language', ['code'], unique=False)
    # ### end Alembic commands ###
